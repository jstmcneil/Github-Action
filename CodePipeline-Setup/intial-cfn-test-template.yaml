Parameters:
  ProjectName:
    Type: String
    Description: >-
      The name of the project being built.  This name will be used on a number
      of resources.
    Default: CFN-Guard
  BucketName:
      Type: String
      Description: >-
        The S3 bucket at which your repository zip live. This S3 bucket should house
        the below zip file of your repository files.
  S3RepoObjectKey:
      Type: String
      Description: >-
        The exact name of your S3 zipped object that lives in the S3 bucket stated
        above. This zip contains all your repository files.
  WebhookURL:
      Type: String
      Description: >-
        The webhook to which your results will be sent to. Leave this blank (default option) if you do not
        want to send your data to a webhook.
      Default: ""
  ApplicationCI:
    Type: String
    Description: >-
      The 3-character application key (or "CI") belonging to your application.
    Default: ""
  RulesetName:
    Type: String
    Description: >-
      Name of the ruleset that your CloudFormation templates are run against.
    Default: "ruleset_migrated.guard"
  ColorScheme:
    Type: String
    Description: >-
      The color scheme in which the build log failures will be printed in.
    AllowedValues:
      - "dark"
      - "light"
      - "default"
    Default: "default"

Resources:
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
  CodeBuildServicePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeBuildServicePolicy
      Roles:
        - !Ref CodeBuildServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: ecr:GetAuthorizationToken
            Resource: "*"
          - Effect: Allow
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:CompleteLayerUpload
              - ecr:UploadLayerPart
              - ecr:InitiateLayerUpload
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
            Resource: arn:aws:ecr:us-east-1:437042700033:repository/cfn-guard-docker
          - Effect: Allow
            Resource:
              - !Sub "arn:aws:logs:us-east-1:437042700033:log-group:/aws/codebuild/${ProjectName}"
              - !Sub "arn:aws:logs:us-east-1:437042700033:log-group:/aws/codebuild/${ProjectName}:*"
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
          - Effect: Allow
            Resource:
              - arn:aws:s3:::codepipeline-us-east-1-*
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
          - Effect: Allow
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Resource:
              - !Sub "arn:aws:codebuild:us-east-1:437042700033:report-group/${ProjectName}-*"

  CodePipelineServicePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodePipelineServicePolicy
      Roles:
        - !Ref CodePipelineServiceRole
      PolicyDocument:
        Statement:
        - Sid: CodeBuild
          Effect: Allow
          Action:
          - codebuild:BatchGetBuildBatches
          - cloudwatch:*
          - codebuild:StartBuildBatch
          - codebuild:StartBuild
          - codebuild:BatchGetBuilds
          Resource: "*"
        - Sid: Version
          Effect: Allow
          Action:
          - s3:GetBucketVersioning
          - s3:PutBucketVersioning
          Resource: 
            - !Sub "arn:aws:s3:::${BucketName}"
        - Sid: ObjectKey
          Effect: Allow
          Action:
          - s3:GetObject
          - s3:GetObjectVersion
          Resource: 
            - !Sub "arn:aws:s3:::${BucketName}/${S3RepoObjectKey}"
        - Sid: Logging
          Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          Resource: arn:aws:s3:::codepipeline-us-east-1-*/*

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codepipeline.amazonaws.com

  CFNGuardPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: codepipeline-us-east-1-218189232283
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              RunOrder: 1
              Configuration:
                PollForSourceChanges: 'false'
                S3Bucket: !Ref BucketName
                S3ObjectKey: !Ref S3RepoObjectKey
              OutputArtifacts:
                - Name: SourceArtifact
              InputArtifacts: []
              Region: us-east-1
              Namespace: SourceVariables
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
              Configuration:
                EnvironmentVariables: !Sub >-
                  [{"name":"rulesetfile","value":"${RulesetName}","type":"PLAINTEXT"},{"name":"webhookurl","value":"${WebhookURL}","type":"PLAINTEXT"},{"name":"color_scheme","value":"${ColorScheme}","type":"PLAINTEXT"},{"name":"appCI","value":"${ApplicationCI}","type":"PLAINTEXT"}]
                ProjectName: !Ref ProjectName
              OutputArtifacts:
                - Name: BuildArtifact
              InputArtifacts:
                - Name: SourceArtifact
              Region: us-east-1
    DependsOn:
      - CodeBuildStep
  CodeBuildStep:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Ref ProjectName
      Source:
        Type: CODEPIPELINE
        BuildSpec: |-
          version: 0.2

          env:
            variables:
              rulesetfile: ""
              webhookurl: ""
              color_scheme: ""
              appCI: ""
          phases:
            build:
              commands:
                 - /scripts/run-cfn-binary.sh $rulesetfile $appCI $color_scheme $webhookurl
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: '437042700033.dkr.ecr.us-east-1.amazonaws.com/cfn-guard-docker:latest'
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: []
        PrivilegedMode: false
        ImagePullCredentialsType: SERVICE_ROLE
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      TimeoutInMinutes: 10
      QueuedTimeoutInMinutes: 480
